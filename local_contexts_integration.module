<?php

/**
 * @file
 * Provides hooks for the Local Contexts Integration module.
 */

/**
 * Implements hook_help().
 */
function local_contexts_integration_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.local_contexts_integration') {
    return '<p>' . \Drupal::translation()->translate('Provides integration with the Local Contexts API for displaying Traditional Knowledge Labels.') . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function local_contexts_integration_theme() {
  return [
    'local_contexts_block' => [
      'variables' => [
        'unique_id' => '',
        'form' => NULL,
        'tk_labels' => [],
        'display_option' => 'show_name',  // Pass display_option here
      ],
      'template' => 'local-contexts-block',
    ],
  ];
}

/**
 * Implements hook_install().
 */
function local_contexts_integration_install() {
  $theme = \Drupal::config('system.theme')->get('default');
  $plugin_id = 'local_contexts_block';
  $block_id = 'local_contexts_integration_custom_block';
  $block_storage = \Drupal::service('entity_type.manager')->getStorage('block');

  // Check if the block already exists to avoid duplicates.
  $existing_blocks = $block_storage->loadByProperties([
    'theme' => $theme,
    'plugin' => $plugin_id,
  ]);

  if (empty($existing_blocks)) {
      $block = $block_storage->create([
          'id' => $block_id,
          'theme' => $theme,
          'plugin' => $plugin_id,
          'status' => 1, // Enable the block.
      ]);
      $block->save();
  }
}

